Go Lang
==========================================

Genuine knowledge comes from practice.

## 学习资料
* https://github.com/avelino/awesome-go#e-books
* http://www.golang-book.com/
* [Network programming with Go](http://jan.newmarch.name/go/)
* [GoDoc](https://godoc.org)
* [Go Lib List](http://go-lang.cat-v.org/pure-go-libs)

==========================================Go v1.11
mkdir test
cd test
go mod init test
go run .
go build

git config --global http.sslVerify true

rsync -avzhe 'ssh -p 22' --progress webdev@165.227.11.2:/home/webdev/go ./

* install
解压加路径即可

==================.bash_profile
export GOROOT=/usr/local/go
export GOPATH=$HOME/go
PATH=$PATH:$GOPATH/bin
PATH=/usr/bin:/usr/local/go/bin:/home/colin.lin/.composer/vendor/bin:$PATH

export PATH

export http_proxy=192.168.4.192:1080
export https_proxy=192.168.4.192:1080

==================代理
go get设置代理，需要添加http_proxy等环境变量

修改~/.bashrc添加以下配置后，在source ~/.bashrc就可以了：

export http_proxy=http://localhost:8787 
export https_proxy=httpproxyexportftpproxy=http_proxy 
export rsync_proxy=$http_proxy 

==========================================Web Project
# 数据存取
* https://github.com/jmoiron/sqlx
* https://github.com/jinzhu/gorm
*

# 数据存取教程：
http://go-database-sql.org/index.html
https://hackernoon.com/how-to-work-with-databases-in-golang-33b002aa8c47

# Background Job

## A realtime distributed messaging platform
http://nsq.io/

## Machinery is an asynchronous task queue/job queue based on distributed message passing.
https://github.com/RichardKnop/machinery

## At a high level, Faktory is a work server. It is the repository for background jobs within your application. Jobs have a type and a set of arguments and are placed into queues for workers to fetch and execute.
https://github.com/contribsys/faktory

## A Commander for modern Go CLI interactions
https://github.com/spf13/cobra

## Fireworq is a lightweight, high-performance, language-independent job queue system.
https://github.com/fireworq/fireworq

==========================================Daily Command
* 在项目目录: go install
* go install PROJECT_PATH
* go get REPO_URL
* go get -u REPO_URL
* 格式化: gofmt -w main.go
* curl localhost:9999

==========================================IDE
* VIM
https://github.com/fatih/vim-go-tutorial
https://github.com/fatih/vim-go
* Sublime Text
https://medium.com/@arshamshirvani/super-charge-your-sublime-text-for-golang-development-3239d9c376bb
* Visual Studio


==========================================Install
1. wget https://storage.googleapis.com/golang/go1.8.1.linux-amd64.tar.gz
2. tar zxvf go1.8.1.linux-amd64.tar.gz -C $GO_INSTALL_DIR

==========================================upgrade on Ubuntu
1. tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz

==========================================upgrade on Centos
1. log in root
2. uninstalling old go
mv /usr/lib/golang ~/tmp

==========================================upgrade on Centos 20180825
https://golang.org/doc/install
tar -C /usr/local -xzf go1.11.linux-amd64.tar.gz

==========================================Problems
? cannot find GOROOT directory
vim ~/.bash_profile
export GOROOT=/usr/lib/golang

? go get timeout
http://stackoverflow.com/questions/10383299/how-do-i-configure-go-to-use-a-proxy
http_proxy=127.0.0.1:8080 go get code.google.com/p/go.crypto/bcrypt
http_proxy=192.168.4.192:1080 go get -u -v code.google.com/p/go.crypto/bcrypt

==========================================Env
export GOPATH=~/golang/
export GOPATH="$HOME/golang/"
vim ~/.bashrc
export GOROOT=~/golang/
export GOROOT=/data/golang
PATH=/data/golang/bin:$PATH

======================================================================
      Web Framework
======================================================================
==========================================Gin
1. go get gopkg.in/gin-gonic/gin.v1



==========================================MysQL
go get github.com/go-sql-driver/mysql





吐槽
1. 函数参数不支持默认值；

技巧
1. 获得类型：reflect.TypeOf(today)